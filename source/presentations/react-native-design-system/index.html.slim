---
title:    'Design system in React Native —From zero to hero'
layout:   presentation
noindex:  false
---

| ### Design system in React Native <br> —From Zero to Hero

  <br><br>

  React Meetup — Bordeaux

  _February 2021_

  ---

  > Don’t code your CSS for the page.<br>
  > Code for the system.<br>
  > —Jonathan Snook

  --

  ### 2007

  ![](/assets/images/react-native-restyle/art-css.png)

  --

  ### Web Developpers

  ![](/assets/images/react-native-restyle/css.gif)

  --

  ### CSS in 2010-ish

  - 😕 Global scope
  - 😬 Grid system without `flexbox`
  - 🧐 Web browsers engines `Gecko`, `Trident`, `Webkit`…

  --

  ### 2012

  ![](/assets/images/react-native-restyle/rails-sass.png)

  --

  ### CSS Preprocessing FTW

  - ✅ Variables
  - ✅ Nesting
  - ✅ Mixins
  - 📦 BEM
  - 📦 SMACSS
  - 📦 Atomic Design

  --

  ### 2015

  React and React Native

  --

  ### Styling in React

  ![](/assets/images/react-native-restyle/react-style.png)

  --

  ### React Native

  We Do `CSS-in-JS`

  --

  ### Styling in React Native

  - ⭐ Write `CSS` in `JavaScript` syntax (`functions` and `variables`)
  - 📦 Colocate styles with components
  - 🌗 Take advantage of anything from the JS ecosystem

  --

  # Guess what happened?

  --

  ### Developpers with React Native

  ![](/assets/images/react-native-restyle/css.gif)

  ---
= partial 'layouts/presentation/speaker'
| <div></div>
  --

  ## Today we will be covering

  📕

  - The importance of a color palette
  - Scaling Typography
  - Theming
  - Introduce a tool to design effectivelly

  --

  ## Why ?

  Become a hero…

  ![](/assets/images/react-native-restyle/hulk-ultron.jpg)

  --

  ### Epic fail

  …not a zero

  ![](/assets/images/react-native-restyle/hulk2003.jpg)

  --

  ## Mentions ❤️ [@flexbox_](https://twitter.com/flexbox_)

  Save the link

  http://bit.ly/rn-design

  ---

  # Who are you?

  --

  ![](/assets/images/react-native-restyle/qr-game.png)

  --

  ### https://www.wooclap.com/HULK

  --

  https://app.wooclap.com/events/HULK/0

  --

  ## React Native in a nutshell

  ![](/assets/images/react-native-restyle/bruce-banner.webp)

  --

  ## React Native in a nutshell

  ```
  .js --- 🎩✨ ------> iOS
                  |--> Android
                  |--> Web Apps
                  |--> Windows Apps
                  |--> macOS Apps
  ```

  --

  ## React Native in a nutshell

  Container
  ```
  <div>   ---->   <View>
  ```

  Text
  ```
  <p>     ---->   <Text>
  <h1>    ---->   <Text>
  <h2>    ---->   <Text>
  <h3>    ---->   <Text>
  ```

  ---

  # PHASE 1

  --

  ### StyleSheets Vs React Native

  No `-` it's camelCase

  ```
  const App = () => (
    <View style={styles.container}>
      <Text>React Native</Text>
    </View>
  );

  const styles = StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: "#eaeaea"
    },
  });
  ```

  --

  Strings and not number —sometimes `fontWeight`

  ```
  const App = () => (
    <View style={styles.container}>
      <Text style={styles.title}>React Native</Text>
    </View>
  );

  const styles = StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: "#eaeaea"
    },
    title: {
      marginTop: 16,
      paddingVertical: 8,
      borderWidth: 4,
      borderColor: "#20232a",
      borderRadius: 6,
      backgroundColor: "#61dafb",
      color: "#20232a",
      textAlign: "center",
      fontSize: 30,
      fontWeight: "500"
    }
  });
  ```


  --

  Shadows iOS !== Android

  ```
  square: {
    alignSelf: "center",
    backgroundColor: "white",
    borderRadius: 4,
    height: 150,
    shadowColor: "black", //iOS
    width: 150
  },
  ```

  --

  ### Layout

  [Flexbox Yoga](https://yogalayout.com/playground)

  --

  ## Colors

  --


  ---

  # PHASE 2

  --

  Let's reboot your paradigm

  ![](/assets/images/react-native-restyle/hulk-fingers.gif)

  --

  [https://github.com/Shopify/restyle](https://github.com/Shopify/restyle)

  ![](/assets/images/react-native-restyle/restyle.png)

  --

  > The Restyle library provides a type-enforced system<br>
  > for building UI components in React Native with TypeScript.

  --

  # TYPESCRIPT

  --

  Avoid cognitive overload

  ![](/assets/images/react-native-restyle/overload.gif)

  ---

  # TYPOGRAPHY

  ---

  # COLORS

  --

  ### Designers x Developers

  ![](/assets/images/react-native-restyle/hulk-ironman.gif)

  --

  ### Anatomy of a good palette

  - https://getbootstrap.com/docs/5.0/customize/color/
  - https://tailwindcss.com/docs/customizing-colors
  - https://colors.eva.design/

  ---

  # THEMING

  ---

  > Don’t code your `CSS-in-JS` for the screen.<br>
  > Code for the system.<br>
  > —David Leuliette

  --

  [https://davidl.fr/road-to-react-native](https://davidl.fr/road-to-react-native)

  ![](/assets/images/react-native-restyle/road-to-react-native.jpg)


  --

  ## Q&A [@flexbox_](https://twitter.com/flexbox_)

  🤖

  https://davidl.fr/road-to-react-native
