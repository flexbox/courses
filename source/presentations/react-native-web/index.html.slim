---
title:    'Static websites in the era of Headless CMS'
layout:   presentation
noindex:  false
---

| ### React Native: Learn once, write anywhere

  React Beer Lille #4

  _September 2019_

  ---

= partial 'layouts/presentation/speaker'
| <div></div>
  ---
= partial 'layouts/presentation/sid'
| <div></div>
  ---

  ### Mentions ‚ù§Ô∏è

  ## [@flexbox_](https://twitter.com/flexbox_)
  ## [@sbentifraouine](https://twitter.com/sbentifraouine)

  Save the link

  https://bit.ly/react-native-web

  --

  ## Today we will be covering

  - State of art of React Native and Expo
  - Data with GraphQL
  - CSS in JS
  - Serveless Infrastructure
  - DEMO

  ---

  ## The power of the web

  --

  ![](/assets/images/react-native-web/java.png)

  --

  ## WRONG!

  ü§•

  --

  ![](/assets/images/react-native-web/rn.png)

  --

  ## It just works

  ü§©

  ---

  ## State of art of React Native

  --

  ### Who made it?

  Facebook

  --

  ### What is it?

  Tools for cross-platform application development

  --

  ### Why is it good?

  - ‚úÖ One JavaScript codebase, 1 language, 1 syntax
  - ‚úÖ Large Community [@react-native-community](https://github.com/react-native-community)
  - ‚úÖ Lots of real life users
  - üî• Productivity: Hot reloading and Declarative UI

  --

  ### Who‚Äôs using it?

  ![](/assets/images/react-native-web/users.png)

  --

  ### Nicolas Gallagher @twitter

  <iframe width="560" height="315" src="https://www.youtube.com/embed/tFFn39lLO-U" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

  --

  ### Alternatives?

  - Ionic / PhoneGap / Cordova? üêå
  - Xamarin? ü§∑‚Äç‚ôÇÔ∏è
  - Flutter? üõ†

  --

  ### Google?

  ![](/assets/images/react-native-web/DraggedImage.png)

  ---

  ### Why we are here?

  --

  Money!

  ![](https://media.giphy.com/media/3o6gDWzmAzrpi5DQU8/giphy.gif)

  --

  ### We want to launch our startup

  - with no money
  - cross platform is expensive
  - we only know JavaScript

  --

  > Make startups pitch deck great again

  --

  ![](https://media.giphy.com/media/l0HlQngl0Eja36dlS/giphy.gif)

  ---

  ## The Serverless Native Stack

  - React Native Expo
    - iOS Native App
    - Android Native App
  - Data
    - GraphQL API with prisma
  - Design System
    - UI Kitten

  --

  ### It‚Äôs complicated

  ![](/assets/images/react-native-web/react-native.png)

  --

  ## React Native Expo

  üöë

  --

  ### Who made it?

  Expo inc

  --

  ### What is it?

  Build, deploy, and quickly iterate on native app.

  --

  ### Why is it good?

  - ‚úÖ Over-the-air updates
  - ‚úÖ API's _(Bluetooth, Push notifications, Image picker‚Ä¶)_
  - ‚úÖ Debugger
  - üî• Easy tooling

  --

  <iframe width="760" height="515" src="https://www.youtube.com/embed/QOMFrClGAtk" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

  ---

  ## Data

  --

  ## GraphQL

  The Query language for your API

  --

  üé•

  GraphQL: The Documentary

  <iframe width="760" height="515" src="https://www.youtube.com/embed/783ccP__No8?controls=0" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

  --

  ![](/assets/images/react-native-web/how-to-gql-1.png)

  --

  ![](/assets/images/react-native-web/how-to-gql-2.png)

  --

  ![](/assets/images/react-native-web/how-to-gql-3.png)

  --

  ## Prisma

  --

  ### Who made it?

  Prima inc

  --

  ### What is it?

  Prisma replaces traditional ORMs and can be used to build GraphQL servers, REST APIs, microservices & more.

  --

  ### Why is it good?

  - ‚úÖ ORM on steroid
  - ‚úÖ Good UI
  - ‚úÖ Database agnostic
  - üî• Instantly publish your database

  --

  ### Query langage for your database

  ![](/assets/images/react-native-web/prisma-intro.png)

  --

  ### Quote schema

  ![](/assets/images/react-native-web/prisma-dashboard-empty.png)

  --

  ### Seeds

  ![](/assets/images/react-native-web/prisma-dashboard-full.png)

  --

  üîß

  ### Scaffold GraphQL

  ```bash
  npm i -g prisma
  mkdir server && cd server
  prisma init # Will prompt questions to setup server
  prisma deploy # Wire things up with you DB
  ```


  --

  ### It looks like this

  ![](/assets/images/react-native-web/light.png)

  --

  <iframe width="760" height="515" src="https://www.youtube.com/embed/3TPrS3CX_-I?rel=0" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

  --

  ![](/assets/images/react-native-web/graphql-playground.png)

  --

  ### How we connect both?

  --

  ## Apollo

  --

  ### Who made it?

  METEOR DEVELOPMENT GROUP, INC.

  --

  ### What is it?

  Tools to adopt GraphQL the right way.

  --

  ### Why is it good?

  - ‚úÖ Framework agnostic
  - ‚úÖ Data queries are declarative
  - ‚úÖ Cache state
  - üî• Error handling

  --

  ### React Context API

  ```JavaScript
  import * as React from 'react';

  import ApolloClient from 'apollo-boost';
  import { ApolloProvider } from '@apollo/react-hooks';

  const apolloClient = new ApolloClient({
    uri: 'URL_TO_GRAPHQL'
  });

  const App = () => (
    <ApolloProvider client={apolloClient}>
      <HomeScreen />
    </ApolloProvider>
  );

  export default App;
  ```

  ---

  ## Design System

  --

  ![](https://media.giphy.com/media/vFKqnCdLPNOKc/giphy.gif)

  --

  React Native Kitten UI

  ![](/assets/images/react-native-web/light.png)

  --

  React Native Kitten UI

  ![](/assets/images/react-native-web/dark.png)

  --

  üòø

  ```javascript
  import React from 'react';
  import { Text, View, StyleSheet } from 'react-native';

  export const Quote = props => (
    <View>
      <Text style={styles.titleText}>{props.title}</Text>
      <Text style={styles.subTitleText}>‚Äî {props.author}</Text>
    </View>
  );

  const styles = StyleSheet.create({
    titleText: {
      fontSize: 20
      fontWeight: "bold",
      color: Colors.black
    },
    subTitleText: {
      fontSize: 16
      color: Colors.black
    },
  });

  ```

  --

  üòª

  ```javascript
  import React from 'react';
  import { Text, Layout } from 'react-native-ui-kitten';

  export const Quote = props => (
    <Layout>
      <Text category="s1">{props.title}</Text>
      <Text category="c1">‚Äî {props.author}</Text>
    </Layout>
  );
  ```

  --

  ### Text

  - `status`: primary, success, info, warning or danger.
  - `category`: h1, h2, h3, h4, h5, h6, s1, s2, p1, p2, c1, c2, label.
  - `appearance`: default, alternative, hint.

  --

  ### In a nutshell

  Bootstrap for react native

  --

  ### JavaScript Everywhere

  --

  üëã Hey web developer

  Just write CSS

  --

  ![](/assets/images/react-native-web/DraggedImage-1.png)

  --

  ##¬†styled-components native

  ```bash
  yarn add styled-components
  ```

  ```js
  import styled from 'styled-components/native';
  ```

  --

  TODO: add an example here

  --

  ## DEMO TIME

  üì±

  --

  ## The Serverless Web / Native Stack

  - React Native Expo
    - iOS Native App
    - Android Native App
    - Web
  - Data
    - GraphQL API
  - UI Kitten
    - Design System
   - Netlify
    - www Hosting

  --

  Netlify

  ### Who made it?
  ### What is it?
  ### Why is it good?

  --

  Who is using React Native Web in production web apps? Twitter, Major League Soccer, Flipkart, Uber, The Times, DataCamp.

  - ‚ö†Ô∏è Compatibility: React Native 0.55.
  - ‚úÖ Browser support: Chrome, Firefox, Edge, Safari 7+, IE 10+.

  [https://github.com/expo/web-examples/](https://github.com/expo/web-examples/)

  --

  ### Continuous delivery

  With this setup Netlify will build and deploy when you push to git or open a new pull request:

  1. Start a new Netlify project
  2. Pick your Git hosting service and select your repository
  3. Click Build your site

  --

  ![](/assets/images/react-native-web/DraggedImage-2.png)

  --

  ![](/assets/images/react-native-web/DraggedImage-3.png)

  --

  Create a folder `/web-build`

  --

  ![](/assets/images/react-native-web/DraggedImage-4.png)

  --

  Staging test

  ![](/assets/images/react-native-web/DraggedImage-5.png)

  --

  Deploy Prod üöÄ

  ![](/assets/images/react-native-web/DraggedImage-6.png)

  --

  ## Finish

  - ‚úÖ App iOS
  - ‚úÖ App Andoid
  - ‚úÖ website

  Learn once write anywhere, render anywhere

  --

  ## References

  - [https://akveo.github.io/react-native-ui-kitten/docs/](https://akveo.github.io/react-native-ui-kitten/docs/)
  - [https://blog.expo.io/expo-cli-and-sdk-web-support-beta-d0c588221375](https://blog.expo.io/expo-cli-and-sdk-web-support-beta-d0c588221375)
  - [https://github.com/necolas/react-native-web](https://github.com/necolas/react-native-web)
  - [https://www.swyx.io/writing/react-native-web-singularity](https://www.swyx.io/writing/react-native-web-singularity)

  --

  ## Interested with a in-house workshop?

  --

  ## Q&A

  Ask questions [@flexbox_](https://twitter.com/flexbox_)
  Ask questions [@flexbox_](https://twitter.com/flexbox_)

